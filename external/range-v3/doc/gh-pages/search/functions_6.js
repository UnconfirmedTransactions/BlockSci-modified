var searchData=
[
  ['fill',['fill',['../group__group-algorithms.html#gae9d5c547eca91958d6a9c63233c5f4b1',1,'ranges::fill(O first, S last, V const &amp;val) -&gt; O requires output_iterator&lt; O, V const &amp; &gt; &amp;&amp;sentinel_for&lt; S, O &gt;'],['../group__group-algorithms.html#ga1250c1c363e349a985a2b3b89a31f7fa',1,'ranges::fill(Rng &amp;&amp;rng, V const &amp;val) -&gt; safe_iterator_t&lt; Rng &gt; requires output_range&lt; Rng, V const &amp; &gt;']]],
  ['fill_5fn',['fill_n',['../group__group-algorithms.html#ga8a85315279234ac2155d2e351f7df0e2',1,'ranges']]],
  ['find',['find',['../group__group-algorithms.html#gaa0c8dbb38d3d49a554898eea469baee7',1,'ranges::find(I first, S last, V const &amp;val, P proj=P{}) -&gt; I requires input_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_relation&lt; equal_to, projected&lt; I, P &gt;, V const * &gt;'],['../group__group-algorithms.html#ga1fdffc553245eb3c303eaff6e178bf70',1,'ranges::find(Rng &amp;&amp;rng, V const &amp;val, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires input_range&lt; Rng &gt; &amp;&amp;indirect_relation&lt; equal_to, projected&lt; iterator_t&lt; Rng &gt;, P &gt;, V const * &gt;']]],
  ['find_5fend',['find_end',['../group__group-algorithms.html#gafe2b55fa404c2670cce8f3441d3b1485',1,'ranges::find_end(I1 begin1, S1 end1, I2 begin2, S2 end2, R pred=R{}, P proj=P{}) -&gt; subrange&lt; I1 &gt; requires forward_iterator&lt; I1 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;forward_iterator&lt; I2 &gt; &amp;&amp;sentinel_for&lt; S2, I2 &gt; &amp;&amp;indirect_relation&lt; R, projected&lt; I1, P &gt;, I2 &gt;'],['../group__group-algorithms.html#gab12f25e857f8d8468ec5955b4956f503',1,'ranges::find_end(Rng1 &amp;&amp;rng1, Rng2 &amp;&amp;rng2, R pred=R{}, P proj=P{}) -&gt; safe_subrange_t&lt; Rng1 &gt; requires forward_range&lt; Rng1 &gt; &amp;&amp;forward_range&lt; Rng2 &gt; &amp;&amp;indirect_relation&lt; R, projected&lt; iterator_t&lt; Rng1 &gt;, P &gt;, iterator_t&lt; Rng2 &gt;&gt;']]],
  ['find_5ffirst_5fof',['find_first_of',['../group__group-algorithms.html#gaf8db82c6ebdcf9be833020f9efebcad6',1,'ranges::find_first_of(I0 begin0, S0 end0, I1 begin1, S1 end1, R pred=R{}, P0 proj0=P0{}, P1 proj1=P1{}) -&gt; I0 requires input_iterator&lt; I0 &gt; &amp;&amp;sentinel_for&lt; S0, I0 &gt; &amp;&amp;forward_iterator&lt; I1 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;indirect_relation&lt; R, projected&lt; I0, P0 &gt;, projected&lt; I1, P1 &gt;&gt;'],['../group__group-algorithms.html#ga12a7a0c47e8ee9b4a4448ff7de8d7a8b',1,'ranges::find_first_of(Rng0 &amp;&amp;rng0, Rng1 &amp;&amp;rng1, R pred=R{}, P0 proj0=P0{}, P1 proj1=P1{}) -&gt; safe_iterator_t&lt; Rng0 &gt; requires input_range&lt; Rng0 &gt; &amp;&amp;forward_range&lt; Rng1 &gt; &amp;&amp;indirect_relation&lt; R, projected&lt; iterator_t&lt; Rng0 &gt;, P0 &gt;, projected&lt; iterator_t&lt; Rng1 &gt;, P1 &gt;&gt;']]],
  ['find_5fif',['find_if',['../group__group-algorithms.html#ga97d40229d9524a2dca7bdfa1dc41eb7f',1,'ranges::find_if(I first, S last, F pred, P proj=P{}) -&gt; I requires input_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_unary_predicate&lt; F, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#ga83655c30e620ed517ebd2f6ea039f84b',1,'ranges::find_if(Rng &amp;&amp;rng, F pred, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires input_range&lt; Rng &gt; &amp;&amp;indirect_unary_predicate&lt; F, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['find_5fif_5fnot',['find_if_not',['../group__group-algorithms.html#gad5baa6a43c9610670e8256e4ee4b9eb1',1,'ranges::find_if_not(I first, S last, F pred, P proj=P{}) -&gt; I requires input_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_unary_predicate&lt; F, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#ga7017c275cc667040bcbd35f568571f11',1,'ranges::find_if_not(Rng &amp;&amp;rng, F pred, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires input_range&lt; Rng &gt; &amp;&amp;indirect_unary_predicate&lt; F, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['for_5feach',['for_each',['../group__group-algorithms.html#ga5148d309f477cd1ab91e7a7b5d933046',1,'ranges::for_each(I first, S last, F fun, P proj=P{}) -&gt; for_each_result&lt; I, F &gt; requires input_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirectly_unary_invocable&lt; F, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#gaa213bfef81a971e1523c4510112de5e4',1,'ranges::for_each(Rng &amp;&amp;rng, F fun, P proj=P{}) -&gt; for_each_result&lt; safe_iterator_t&lt; Rng &gt;, F &gt; requires input_range&lt; Rng &gt; &amp;&amp;indirectly_unary_invocable&lt; F, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['for_5feach_5fn',['for_each_n',['../group__group-algorithms.html#gad07cd5e802ad4dacdce09794a243ece2',1,'ranges::for_each_n(I first, iter_difference_t&lt; I &gt; n, F fun, P proj=P{}) -&gt; I requires input_iterator&lt; I &gt; &amp;&amp;indirectly_unary_invocable&lt; F, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#gae8bf0c761837f2a0fb513a6bfee8db26',1,'ranges::for_each_n(Rng &amp;&amp;rng, range_difference_t&lt; Rng &gt; n, F fun, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires input_range&lt; Rng &gt; &amp;&amp;indirectly_unary_invocable&lt; F, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['forward_5frange',['forward_range',['../structranges_1_1view__interface.html#a8f3a50712ecd80e443aea996cc2ff012',1,'ranges::view_interface::forward_range(input_range&lt; D&lt; True &gt; &amp; &gt; &amp;&amp;sized_range&lt; D&lt; True &gt; &amp; &gt;)) const expr auto operator[](detail'],['../structranges_1_1view__interface.html#a3a1986adfea3edfa3a27171b7eef7fef',1,'ranges::view_interface::forward_range(input_range&lt; D&lt; True &gt; const &amp; &gt; &amp;&amp;sized_range&lt; D&lt; True &gt; const &amp; &gt;)) const expr auto operator[](detail'],['../structranges_1_1view__interface.html#a2bf306758287222b779d9eec3f8a3ef5',1,'ranges::view_interface::forward_range(input_range&lt; D&lt; True &gt;&gt; &amp;&amp;sized_range&lt; D&lt; True &gt;&gt;)) const expr auto operator[](detail'],['../structranges_1_1view__interface.html#a8f3a50712ecd80e443aea996cc2ff012',1,'ranges::view_interface::forward_range(input_range&lt; D&lt; True &gt; &amp; &gt; &amp;&amp;sized_range&lt; D&lt; True &gt; &amp; &gt;)) const expr auto operator[](detail'],['../structranges_1_1view__interface.html#a3a1986adfea3edfa3a27171b7eef7fef',1,'ranges::view_interface::forward_range(input_range&lt; D&lt; True &gt; const &amp; &gt; &amp;&amp;sized_range&lt; D&lt; True &gt; const &amp; &gt;)) const expr auto operator[](detail'],['../structranges_1_1view__interface.html#a2bf306758287222b779d9eec3f8a3ef5',1,'ranges::view_interface::forward_range(input_range&lt; D&lt; True &gt;&gt; &amp;&amp;sized_range&lt; D&lt; True &gt;&gt;)) const expr auto operator[](detail']]],
  ['front',['front',['../structranges_1_1view__interface.html#a898b70190d236c91a0658146d70764cf',1,'ranges::view_interface::front() -&gt; range_reference_t&lt; D&lt; True &gt;&gt; requires True &amp;&amp;forward_range&lt; D&lt; True &gt;&gt;'],['../structranges_1_1view__interface.html#a32188c01ca2705aefd8e595564a82926',1,'ranges::view_interface::front() const -&gt; range_reference_t&lt; D&lt; True &gt; const &gt; requires True &amp;&amp;forward_range&lt; D&lt; True &gt; const &gt;']]]
];
