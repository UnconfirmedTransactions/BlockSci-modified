var searchData=
[
  ['make_5fheap',['make_heap',['../group__group-algorithms.html#gafc6ac8e09952e6e66e882168d68c163d',1,'ranges::make_heap(I first, S last, C pred=C{}, P proj=P{}) -&gt; I requires random_access_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;sortable&lt; I, C, P &gt;'],['../group__group-algorithms.html#gaf24f51e58d9b234b4687a878d65050cd',1,'ranges::make_heap(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires random_access_range&lt; Rng &gt; &amp;&amp;sortable&lt; iterator_t&lt; Rng &gt;, C, P &gt;']]],
  ['max',['max',['../group__group-algorithms.html#gaba12eee36b9ab29ef0e9b7f59e685a71',1,'ranges::max(T const &amp;a, T const &amp;b, C pred=C{}, P proj=P{}) -&gt; T const &amp;requires indirect_strict_weak_order&lt; C, projected&lt; T const *, P &gt;&gt;'],['../group__group-algorithms.html#ga1d4e1bb60d9bfb5e5437974eed0b03c4',1,'ranges::max(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; range_value_t&lt; Rng &gt; requires input_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt; &amp;&amp;indirectly_copyable_storable&lt; iterator_t&lt; Rng &gt;, range_value_t&lt; Rng &gt; * &gt;'],['../group__group-algorithms.html#gaedb6df45bc43e4cee4be367f76786b99',1,'ranges::max(std::initializer_list&lt; T &gt; const &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; T requires copyable&lt; T &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; T const *, P &gt;&gt;']]],
  ['max_5felement',['max_element',['../group__group-algorithms.html#gab9289134adb9df908a681c75fb60b0d7',1,'ranges::max_element(I first, S last, C pred=C{}, P proj=P{}) -&gt; I requires forward_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#ga4e5950e393a0aee33b00b34c2f8e97c9',1,'ranges::max_element(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires forward_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['merge',['merge',['../group__group-algorithms.html#gab0b29c934e59116aa62f08d48836b48d',1,'ranges::merge(I0 begin0, S0 end0, I1 begin1, S1 end1, O out, C pred=C{}, P0 proj0=P0{}, P1 proj1=P1{}) -&gt; merge_result&lt; I0, I1, O &gt; requires sentinel_for&lt; S0, I0 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;mergeable&lt; I0, I1, O, C, P0, P1 &gt;'],['../group__group-algorithms.html#ga9dc32f54d90650bb5e2604f37374bea2',1,'ranges::merge(Rng0 &amp;&amp;rng0, Rng1 &amp;&amp;rng1, O out, C pred=C{}, P0 proj0=P0{}, P1 proj1=P1{}) -&gt; merge_result&lt; safe_iterator_t&lt; Rng0 &gt;, safe_iterator_t&lt; Rng1 &gt;, O &gt; requires range&lt; Rng0 &gt; &amp;&amp;range&lt; Rng1 &gt; &amp;&amp;mergeable&lt; iterator_t&lt; Rng0 &gt;, iterator_t&lt; Rng1 &gt;, O, C, P0, P1 &gt;']]],
  ['min',['min',['../group__group-algorithms.html#gafab64593526f59bad0f2bf5a95f96bf9',1,'ranges::min(T const &amp;a, T const &amp;b, C pred=C{}, P proj=P{}) -&gt; T const &amp;requires indirect_strict_weak_order&lt; C, projected&lt; T const *, P &gt;&gt;'],['../group__group-algorithms.html#gaee8206c71bf8a3141ffd74d2fa86b9ee',1,'ranges::min(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; range_value_t&lt; Rng &gt; requires input_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt; &amp;&amp;indirectly_copyable_storable&lt; iterator_t&lt; Rng &gt;, range_value_t&lt; Rng &gt; * &gt;'],['../group__group-algorithms.html#ga483adbc4117b6a40342fffe1d0472c1a',1,'ranges::min(std::initializer_list&lt; T &gt; const &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; T requires copyable&lt; T &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; T const *, P &gt;&gt;']]],
  ['min_5felement',['min_element',['../group__group-algorithms.html#ga5889278c5c0850d6ce8a2579991109c3',1,'ranges::min_element(I first, S last, C pred=C{}, P proj=P{}) -&gt; I requires forward_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#gaa486ad46a5307c11a3d1be2f6683cf1c',1,'ranges::min_element(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires forward_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['minmax',['minmax',['../group__group-algorithms.html#gab7746e5071777bfa8943211520a5e7ed',1,'ranges::minmax(T const &amp;a, T const &amp;b, C pred=C{}, P proj=P{}) -&gt; minmax_result&lt; T const &amp; &gt; requires indirect_strict_weak_order&lt; C, projected&lt; T const *, P &gt;&gt;'],['../group__group-algorithms.html#ga93f42f45f3ba905e1eb1cd573f172a4b',1,'ranges::minmax(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; minmax_result&lt; range_value_t&lt; Rng &gt;&gt; requires input_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt; &amp;&amp;indirectly_copyable_storable&lt; iterator_t&lt; Rng &gt;, range_value_t&lt; Rng &gt; * &gt;'],['../group__group-algorithms.html#ga7f84b92881ac8d36ec500601758b489e',1,'ranges::minmax(std::initializer_list&lt; T &gt; const &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; minmax_result&lt; T &gt; requires copyable&lt; T &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; T const *, P &gt;&gt;']]],
  ['minmax_5felement',['minmax_element',['../group__group-algorithms.html#ga941f844d9a850179cb16a4ccc5b9b071',1,'ranges::minmax_element(I first, S last, C pred=C{}, P proj=P{}) -&gt; minmax_element_result&lt; I &gt; requires forward_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#gae13f61b4b199b34e72551c035de4a491',1,'ranges::minmax_element(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; minmax_element_result&lt; safe_iterator_t&lt; Rng &gt;&gt; requires forward_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['mismatch',['mismatch',['../group__group-algorithms.html#ga0dbe34565e3046d0f7fd3c8fadaa5ccd',1,'ranges::mismatch(I1 begin1, S1 end1, I2 begin2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; mismatch_result&lt; I1, I2 &gt; requires input_iterator&lt; I1 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;input_iterator&lt; I2 &gt; &amp;&amp;indirect_relation&lt; C, projected&lt; I1, P1 &gt;, projected&lt; I2, P2 &gt;&gt;'],['../group__group-algorithms.html#ga4da42176e10f531b5b742c55dd5647d0',1,'ranges::mismatch(I1 begin1, S1 end1, I2 begin2, S2 end2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; mismatch_result&lt; I1, I2 &gt; requires input_iterator&lt; I1 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;input_iterator&lt; I2 &gt; &amp;&amp;sentinel_for&lt; S2, I2 &gt; &amp;&amp;indirect_relation&lt; C, projected&lt; I1, P1 &gt;, projected&lt; I2, P2 &gt;&gt;'],['../group__group-algorithms.html#gafdbcd0a2e221a907444f025e93bac41f',1,'ranges::mismatch(Rng1 &amp;&amp;rng1, I2Ref &amp;&amp;begin2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; mismatch_result&lt; safe_iterator_t&lt; Rng1 &gt;, uncvref_t&lt; I2Ref &gt;&gt; requires input_range&lt; Rng1 &gt; &amp;&amp;input_iterator&lt; uncvref_t&lt; I2Ref &gt;&gt; &amp;&amp;indirect_relation&lt; C, projected&lt; iterator_t&lt; Rng1 &gt;, P1 &gt;, projected&lt; uncvref_t&lt; I2Ref &gt;, P2 &gt;&gt;'],['../group__group-algorithms.html#gae9b4343602798cdf8687652d39af9486',1,'ranges::mismatch(Rng1 &amp;&amp;rng1, Rng2 &amp;&amp;rng2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; mismatch_result&lt; safe_iterator_t&lt; Rng1 &gt;, safe_iterator_t&lt; Rng2 &gt;&gt; requires input_range&lt; Rng1 &gt; &amp;&amp;input_range&lt; Rng2 &gt; &amp;&amp;indirect_relation&lt; C, projected&lt; iterator_t&lt; Rng1 &gt;, P1 &gt;, projected&lt; iterator_t&lt; Rng2 &gt;, P2 &gt;&gt;']]],
  ['move',['move',['../group__group-algorithms.html#ga51a5571f63c297cfd285f4a3873737dc',1,'ranges::move(I first, S last, O out) -&gt; move_result&lt; I, O &gt; requires input_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;weakly_incrementable&lt; O &gt; &amp;&amp;indirectly_movable&lt; I, O &gt;'],['../group__group-algorithms.html#gaa55485146994b298d1392f1aa421fdfe',1,'ranges::move(Rng &amp;&amp;rng, O out) -&gt; move_result&lt; safe_iterator_t&lt; Rng &gt;, O &gt; requires input_range&lt; Rng &gt; &amp;&amp;weakly_incrementable&lt; O &gt; &amp;&amp;indirectly_movable&lt; iterator_t&lt; Rng &gt;, O &gt;']]],
  ['move_5fbackward',['move_backward',['../group__group-algorithms.html#ga86b73aec0c528d6500d8df10b46eb4b3',1,'ranges::move_backward(I first, S end_, O out) -&gt; move_backward_result&lt; I, O &gt; requires bidirectional_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;bidirectional_iterator&lt; O &gt; &amp;&amp;indirectly_movable&lt; I, O &gt;'],['../group__group-algorithms.html#ga1bcb9fe56632812478c526a887f97e95',1,'ranges::move_backward(Rng &amp;&amp;rng, O out) -&gt; move_backward_result&lt; safe_iterator_t&lt; Rng &gt;, O &gt; requires bidirectional_range&lt; Rng &gt; &amp;&amp;bidirectional_iterator&lt; O &gt; &amp;&amp;indirectly_movable&lt; iterator_t&lt; Rng &gt;, O &gt;']]]
];
