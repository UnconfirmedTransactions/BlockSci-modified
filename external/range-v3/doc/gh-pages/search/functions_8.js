var searchData=
[
  ['includes',['includes',['../group__group-algorithms.html#gaeb425eb823af17dcbcbd2f60a227affe',1,'ranges::includes(I1 begin1, S1 end1, I2 begin2, S2 end2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; bool requires input_iterator&lt; I1 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;input_iterator&lt; I2 &gt; &amp;&amp;sentinel_for&lt; S2, I2 &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; I1, P1 &gt;, projected&lt; I2, P2 &gt;&gt;'],['../group__group-algorithms.html#gad038da5f95761d60c391d925d81d7291',1,'ranges::includes(Rng1 &amp;&amp;rng1, Rng2 &amp;&amp;rng2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; bool requires input_range&lt; Rng1 &gt; &amp;&amp;input_range&lt; Rng2 &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng1 &gt;, P1 &gt;, projected&lt; iterator_t&lt; Rng2 &gt;, P2 &gt;&gt;']]],
  ['inplace_5fmerge',['inplace_merge',['../group__group-algorithms.html#ga8716e95ad18cb12a55b05e53b5acc6d9',1,'ranges::inplace_merge(I first, I middle, S last, C pred=C{}, P proj=P{}) -&gt; I requires bidirectional_iterator&lt; I &gt; &amp;&amp;sortable&lt; I, C, P &gt;'],['../group__group-algorithms.html#gafff3693db2a1593b6f7f6997466e5906',1,'ranges::inplace_merge(Rng &amp;&amp;rng, iterator_t&lt; Rng &gt; middle, C pred=C{}, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires bidirectional_range&lt; Rng &gt; &amp;&amp;sortable&lt; iterator_t&lt; Rng &gt;, C, P &gt;']]],
  ['is_5fheap',['is_heap',['../group__group-algorithms.html#gad21d5a0e84bb91c343af042fb73332cd',1,'ranges::is_heap(I first, S last, C pred=C{}, P proj=P{}) -&gt; bool requires random_access_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#ga650418789a5ddc477e26fad6fe7f0fb2',1,'ranges::is_heap(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; bool requires random_access_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['is_5fheap_5funtil',['is_heap_until',['../group__group-algorithms.html#gafc783f9d6702126f1cfe3971cc24af52',1,'ranges::is_heap_until(I first, S last, C pred=C{}, P proj=P{}) -&gt; I requires random_access_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#ga79c070bf7916a0903bf1e910f4b8bf7f',1,'ranges::is_heap_until(Rng &amp;&amp;rng, C pred=C{}, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires random_access_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['is_5fpartitioned',['is_partitioned',['../group__group-algorithms.html#ga296ccfa60177c85c2d1104761178334f',1,'ranges::is_partitioned(I first, S last, C pred, P proj=P{}) -&gt; bool requires input_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_unary_predicate&lt; C, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#gada630b75096ea1e1276173e0b6464ed6',1,'ranges::is_partitioned(Rng &amp;&amp;rng, C pred, P proj=P{}) -&gt; bool requires input_range&lt; Rng &gt; &amp;&amp;indirect_unary_predicate&lt; C, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['is_5fpermutation',['is_permutation',['../group__group-algorithms.html#ga53acd367f03caa54ca29bb2d70e61eba',1,'ranges::is_permutation(I1 begin1, S1 end1, I2 begin2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; bool requires forward_iterator&lt; I1 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;forward_iterator&lt; I2 &gt; &amp;&amp;indirectly_comparable&lt; I1, I2, C, P1, P2 &gt;'],['../group__group-algorithms.html#gaa6c38c42c15abc90162194dad95b216b',1,'ranges::is_permutation(I1 begin1, S1 end1, I2 begin2, S2 end2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; bool requires forward_iterator&lt; I1 &gt; &amp;&amp;sentinel_for&lt; S1, I1 &gt; &amp;&amp;forward_iterator&lt; I2 &gt; &amp;&amp;sentinel_for&lt; S2, I2 &gt; &amp;&amp;indirectly_comparable&lt; I1, I2, C, P1, P2 &gt;'],['../group__group-algorithms.html#gafba37d0b7f7fc51effa32f19baa56ad8',1,'ranges::is_permutation(Rng1 &amp;&amp;rng1, I2Ref &amp;&amp;begin2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; bool requires forward_range&lt; Rng1 &gt; &amp;&amp;forward_iterator&lt; uncvref_t&lt; I2Ref &gt;&gt; &amp;&amp;indirectly_comparable&lt; iterator_t&lt; Rng1 &gt;, uncvref_t&lt; I2Ref &gt;, C, P1, P2 &gt;'],['../group__group-algorithms.html#ga74f17609033a0f20f0bc6482d91a7aca',1,'ranges::is_permutation(Rng1 &amp;&amp;rng1, Rng2 &amp;&amp;rng2, C pred=C{}, P1 proj1=P1{}, P2 proj2=P2{}) -&gt; bool requires forward_range&lt; Rng1 &gt; &amp;&amp;forward_range&lt; Rng2 &gt; &amp;&amp;indirectly_comparable&lt; iterator_t&lt; Rng1 &gt;, iterator_t&lt; Rng2 &gt;, C, P1, P2 &gt;']]],
  ['is_5fsorted',['is_sorted',['../group__group-algorithms.html#ga9ef0c9489d476d96092f8b4c77b3ccf4',1,'ranges::is_sorted(I first, S last, R rel=R{}, P proj=P{}) -&gt; bool requires forward_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_strict_weak_order&lt; R, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#ga49836ea88cdda883cd29bc1172b2acc6',1,'ranges::is_sorted(Rng &amp;&amp;rng, R rel=R{}, P proj=P{}) -&gt; bool requires forward_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; R, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]],
  ['is_5fsorted_5funtil',['is_sorted_until',['../group__group-algorithms.html#gae1e0c8d007fae6db8abaa2f47a7cc0d9',1,'ranges::is_sorted_until(I first, S last, R pred=R{}, P proj=P{}) -&gt; I requires forward_iterator&lt; I &gt; &amp;&amp;sentinel_for&lt; S, I &gt; &amp;&amp;indirect_strict_weak_order&lt; R, projected&lt; I, P &gt;&gt;'],['../group__group-algorithms.html#gac588ad6fdec29edaf8695c066b5251f8',1,'ranges::is_sorted_until(Rng &amp;&amp;rng, R pred=R{}, P proj=P{}) -&gt; safe_iterator_t&lt; Rng &gt; requires forward_range&lt; Rng &gt; &amp;&amp;indirect_strict_weak_order&lt; R, projected&lt; iterator_t&lt; Rng &gt;, P &gt;&gt;']]]
];
