# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.24)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS blocksci)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target blocksci
add_library(blocksci SHARED IMPORTED)

set_target_properties(blocksci PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_aggregate_default_initializers;cxx_auto_type;cxx_decltype;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_explicit_conversions;cxx_extern_templates;cxx_generalized_initializers;cxx_generic_lambdas;cxx_inheriting_constructors;cxx_lambdas;cxx_long_long_type;cxx_nullptr;cxx_override;cxx_range_for;cxx_return_type_deduction;cxx_right_angle_brackets;cxx_rvalue_references;cxx_static_assert;cxx_trailing_return_types;cxx_uniform_initialization;cxx_variable_templates;cxx_variadic_templates;cxx_template_template_parameters"
  INTERFACE_INCLUDE_DIRECTORIES "/home/daslab/BlockSci-daslab/src/../include/blocksci/..;/home/daslab/BlockSci-daslab/src/../include/blocksci/external;/home/daslab/BlockSci-daslab/cmake-build-debug/src"
  INTERFACE_LINK_LIBRARIES "Threads::Threads"
  INTERFACE_SOURCES "/home/daslab/BlockSci-daslab/src/../include/blocksci/core/address_types.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/address_type_meta.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/bitcoin_uint256.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/core_fwd.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/dedup_address.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/dedup_address_type.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/hash_combine.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/inout.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/inout_pointer.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/meta.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/raw_address.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/raw_block.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/raw_transaction.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/script_data.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/transaction_data.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core/typedefs.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/address.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/blocksci_fwd.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/blocksci.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/core.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/heuristics.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/cluster.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/exception.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/address/address_fwd.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/address/address.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/address/equiv_address.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/chain_fwd.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/algorithms.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/access.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/input_pointer.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/output_pointer.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/input.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/input_range.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/output.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/output_range.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/transaction.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/transaction_range.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/block.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/block_range.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/blockchain.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/parallel.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/chain/range_util.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/scripts_fwd.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/bitcoin_pubkey.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/multisig_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/multisig_pubkey_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/nonstandard_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/witness_unknown_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/nulldata_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/pubkey_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/pubkey_base_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/script_range.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/script_variant.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/scripts/scripthash_script.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/heuristics/blockchain_heuristics.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/heuristics/change_address.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/heuristics/taint.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/heuristics/tx_identification.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/cluster/cluster_fwd.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/cluster/cluster_manager.hpp;/home/daslab/BlockSci-daslab/src/../include/blocksci/cluster/cluster.hpp"
)

# Import target "blocksci" for configuration "Debug"
set_property(TARGET blocksci APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(blocksci PROPERTIES
  IMPORTED_LOCATION_DEBUG "/home/daslab/BlockSci-daslab/cmake-build-debug/src/libblocksci.so"
  IMPORTED_SONAME_DEBUG "libblocksci.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
